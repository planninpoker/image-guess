generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                        String                     @id @default(uuid())
  name                      String
  admin                     Boolean                    @default(false)
  createdAt                 DateTime                   @default(now())
  updatedAt                 DateTime                   @updatedAt
  challengeRoundSubmissions ChallengeRoundSubmission[]
  challengeScore            ChallengeScore[]
}

model Challenge {
  id          String @id @default(uuid())
  name        String
  description String

  date   DateTime
  rounds ChallengeRound[]
  scores ChallengeScore[]
}

model ChallengeRound {
  id          String                     @id @default(uuid())
  name        String                     @default("")
  imageId     String
  submissions ChallengeRoundSubmission[]
  challenge   Challenge                  @relation(fields: [challengeId], references: [id])
  challengeId String
}

model ChallengeRoundSubmission {
  id         String    @id @default(uuid())
  startedAt  DateTime
  finishedAt DateTime?
  attempts   Int
  completed  Boolean

  user             User           @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId           String
  challengeRound   ChallengeRound @relation(fields: [challengeRoundId], references: [id], onDelete: Cascade)
  challengeRoundId String

  @@unique([userId, challengeRoundId])
}

model ChallengeScore {
  id    String @id @default(uuid())
  score Int

  challenge   Challenge @relation(fields: [challengeId], references: [id], onDelete: Cascade)
  challengeId String
  user        User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId      String

  @@unique([userId, challengeId])
  @@index([challengeId, score])
}
